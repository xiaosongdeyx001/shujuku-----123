<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.zbl.app.dao.ConsumerMapper">
    <resultMap id="BaseResultMap" type="me.zbl.app.domain.Consumer">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="tel" jdbcType="VARCHAR" property="tel"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, tel
    </sql>
    <!-- selectConsumerByTel -->
    <select id="selectConsumerByTel" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from app_consumer
        where tel = #{tel}
    </select>
    <!-- selectAllConsumer -->
    <select id="selectAllConsumer" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from app_consumer
        <if test="offset != null and limit != null">
            limit ${offset}, ${limit}
        </if>
    </select>
    <!-- count -->
    <select id="count" resultType="int">
        select count(*)
        from app_consumer
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from app_consumer
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from app_consumer
        where name like CONCAT(CONCAT('%',#{name},'%'))
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from app_consumer
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="me.zbl.app.domain.Consumer">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
            select replace(uuid(),'-','') from dual
        </selectKey>
        insert into app_consumer (id, name, tel
        )
        values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="me.zbl.app.domain.Consumer">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
            select replace(uuid(),'-','') from dual
        </selectKey>
        insert into app_consumer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            <if test="name != null">
                name,
            </if>
            <if test="tel != null">
                tel,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{id,jdbcType=VARCHAR},
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="tel != null">
                #{tel,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="me.zbl.app.domain.Consumer">
        update app_consumer
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="tel != null">
                tel = #{tel,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="me.zbl.app.domain.Consumer">
        update app_consumer
        set name = #{name,jdbcType=VARCHAR},
        tel = #{tel,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>