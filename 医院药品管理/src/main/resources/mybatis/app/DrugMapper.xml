<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.zbl.app.dao.DrugMapper">
  <resultMap id="BaseResultMap" type="me.zbl.app.domain.Drug">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="invalid" jdbcType="VARCHAR" property="invalid" />
    <result column="quality_guarantee_period" jdbcType="INTEGER" property="qualityGuaranteePeriod" />
    <result column="lower_limit" jdbcType="INTEGER" property="lowerLimit" />
    <result column="supplier_id" jdbcType="VARCHAR" property="supplierId" />
    <result column="specification" jdbcType="VARCHAR" property="specification" />
  </resultMap>

  <resultMap id="DrugListResultMap" type="me.zbl.app.domain.DrugDO">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="invalid" jdbcType="VARCHAR" property="invalid" />
    <result column="quality_guarantee_period" jdbcType="INTEGER" property="qualityGuaranteePeriod" />
    <result column="lower_limit" jdbcType="INTEGER" property="lowerLimit" />
    <result column="supplier_id" jdbcType="VARCHAR" property="supplierId" />
    <result column="specification" jdbcType="VARCHAR" property="specification" />
    <result column="supplier" jdbcType="VARCHAR" property="supplier" />
  </resultMap>

  <sql id="Base_Column_List">
    id, name, quantity, price, invalid, quality_guarantee_period, lower_limit, supplier_id,
    specification
  </sql>
  <!-- selectAllDrug -->
  <select id="selectAllDrug" parameterType="java.util.Map" resultMap="DrugListResultMap">
    select
    app_drug.id, app_drug.name, quantity, price, invalid, quality_guarantee_period, lower_limit, supplier_id,
    specification,
    s.name as supplier
    from app_drug join app_supplier s on app_drug.supplier_id = s.id
    <if test="offset != null and limit != null">
      limit ${offset}, ${limit}
    </if>
  </select>
  <!-- count -->
  <select id="count" resultType="int">
    select count(*)
    from app_drug
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from app_drug
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectByExpireDate" parameterType="java.util.Date" resultMap="BaseResultMap">
    select
    app_drug.id, name, quantity, price, invalid, quality_guarantee_period, lower_limit, supplier_id,
    specification
    from app_drug, app_expire
    where app_drug.id = app_expire.drug_id and
    expired_date = DATE_FORMAT(#{date,jdbcType=TIMESTAMP},'%y-%m-%d');
  </select>

  <select id="selectOverLowerLimit" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from app_drug
    WHERE quantity <![CDATA[
      <=
    ]]>
    lower_limit
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from app_drug
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="me.zbl.app.domain.Drug">
    insert into app_drug (id, name, quantity,
      price, invalid, quality_guarantee_period,
      lower_limit, supplier_id, specification
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{quantity,jdbcType=INTEGER},
      #{price,jdbcType=DECIMAL}, #{invalid,jdbcType=VARCHAR}, #{qualityGuaranteePeriod,jdbcType=INTEGER},
      #{lowerLimit,jdbcType=INTEGER}, #{supplierId,jdbcType=VARCHAR}, #{specification,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="me.zbl.app.domain.Drug">
    insert into app_drug
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="name != null">
        name,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="invalid != null">
        invalid,
      </if>
      <if test="qualityGuaranteePeriod != null">
        quality_guarantee_period,
      </if>
      <if test="lowerLimit != null">
        lower_limit,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="specification != null">
        specification,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=VARCHAR},
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="invalid != null">
        #{invalid,jdbcType=VARCHAR},
      </if>
      <if test="qualityGuaranteePeriod != null">
        #{qualityGuaranteePeriod,jdbcType=INTEGER},
      </if>
      <if test="lowerLimit != null">
        #{lowerLimit,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="specification != null">
        #{specification,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <!-- increaseAndDecreaseQuantity -->
  <update id="increaseAndDecreaseQuantity" parameterType="java.util.Map">
    update app_drug set quantity = quantity + #{quantity,jdbcType=INTEGER} where id = #{drugId,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="me.zbl.app.domain.Drug">
    update app_drug
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="invalid != null">
        invalid = #{invalid,jdbcType=VARCHAR},
      </if>
      <if test="qualityGuaranteePeriod != null">
        quality_guarantee_period = #{qualityGuaranteePeriod,jdbcType=INTEGER},
      </if>
      <if test="lowerLimit != null">
        lower_limit = #{lowerLimit,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="specification != null">
        specification = #{specification,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.zbl.app.domain.Drug">
    update app_drug
    set name = #{name,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      invalid = #{invalid,jdbcType=VARCHAR},
      quality_guarantee_period = #{qualityGuaranteePeriod,jdbcType=INTEGER},
      lower_limit = #{lowerLimit,jdbcType=INTEGER},
      supplier_id = #{supplierId,jdbcType=VARCHAR},
      specification = #{specification,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>